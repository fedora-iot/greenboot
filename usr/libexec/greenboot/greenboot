#!/bin/bash
set -euo pipefail
IFS=$'\n\t'
LC_ALL=C

SCRIPTS_CHECK_PATHS=("/usr/lib/greenboot/check" "/etc/greenboot/check")
SCRIPTS_GREEN_PATHS=("/usr/lib/greenboot/green.d" "/etc/greenboot/green.d")
SCRIPTS_RED_PATHS=("/usr/lib/greenboot/red.d" "/etc/greenboot/red.d")

source_configuration_file() {
    greenboot_configuration_file=/etc/greenboot/greenboot.conf
    if test -f "$greenboot_configuration_file"; then
	# shellcheck source=/etc/greenboot/greenboot.conf
        source $greenboot_configuration_file
    fi
}

source_configuration_file
function is_disabled {
    healthcheck=$1
    for disabled_healthcheck in "${DISABLED_HEALTHCHECKS[@]}"; do
      if [ "${healthcheck}" == "${disabled_healthcheck}" ]; then
	    return 0
	fi
    done
    return 1
}

script_runner () {
  local scripts_dir=$1; shift
  local mode=$1; shift
  local start_msg=$1; shift
  local required_hc_failed=false
  echo "$start_msg"
  for script in $(find "$scripts_dir" -name '*.sh' | sort); do
    if [[ "$required_hc_failed" == true && "$mode" == "strict" ]]; then
      echo "<5>'$(basename "$script")' was skipped due to a previous failure"
    elif is_disabled "$(basename "$script")"; then
      echo "<5>'$(basename "$script")' was skipped, as specified in config"
    else
      local return_code=0
      systemd-cat -t "$(basename "$script")" bash "$script" || return_code=$?
      if [ $return_code -ne 0 ]; then
        local failure_msg
        failure_msg="Script '$(basename "$script")' FAILURE (exit code '$return_code')"
        case "$mode" in
          "relaxed")
            echo "<2>$failure_msg. Continuing..." >&2
            ;;
          "strict")
            required_hc_failed=true
            echo "<0>$failure_msg. Continuing..." >&2
        esac
      else
        echo "<6>Script '$(basename "$script")' SUCCESS"
      fi
    fi
  done

  [[ $required_hc_failed == false ]]
}

case "$1" in
  "check")
    return_code=0
    for health_check_path in "${SCRIPTS_CHECK_PATHS[@]}"; do
      script_runner "$health_check_path/required.d" "strict" "Running Required Health Check Scripts..." || {
        return_code=1
        break
      }
      script_runner "$health_check_path/wanted.d" "relaxed" "Running Wanted Health Check Scripts..."
    done
    exit $return_code
    ;;
  "green")
    echo "<5>Boot Status is GREEN - Health Check SUCCESS"
    for green_path in "${SCRIPTS_GREEN_PATHS[@]}"; do
        script_runner "$green_path" "relaxed" "Running Green Scripts..."
    done
    ;;
  "red")
    echo "<0>Boot Status is RED - Health Check FAILURE!"
    for red_path in "${SCRIPTS_RED_PATHS[@]}"; do
        script_runner "$red_path" "relaxed" "Running Red Scripts..."
    done
    ;;
  *)
    echo "Unknown argument, exiting." >&2
    exit 1
esac
